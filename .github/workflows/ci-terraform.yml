on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.REGION }}

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform init
      id: init
      run: terraform init

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: |
        pwd
        cd modules/network
        terra
        terraform plan -var-file="../../environments/staging/network/terraform.tfvars" -lock=false
    

      #continue-on-error: true

    # - name: Terraform Init
    #   uses: ds-infra@master
    #   id: plan
    #   if: github.event_name == 'pull_request'
    #   with:
    #     tf_actions_version: 0.12.13
    #     tf_actions_subcommand: 'inits'
    #     tf_actions_working_dir: 'modules/network'
    #     tf_actions_comment: true
    #     args: '-var-file="../../environments/staging/network/terraform.tfvars" -lock=false'

    # - name: Terraform apply
    #   shell: pwsh
    #   run: |
    #     cd modules/network
    #     terraform apply --auto-approve -var-file=../../environments/dev/network/terraform.tfvars -lock=false